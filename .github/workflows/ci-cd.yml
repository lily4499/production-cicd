name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install & Test
      run: |
        cd app
        npm install
        npm test

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2
      with:
        projectBaseDir: ./app
        args: >
          -Dsonar.projectKey=prod-cicd-app
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USER }}/prod-cicd-app:${{ github.run_number }} ./app

    - name: Trivy Image Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKER_USER }}/prod-cicd-app:${{ github.run_number }}
        exit-code: 1
        severity: HIGH,CRITICAL

    - name: Push Docker Image
      run: |
        echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin
        docker push ${{ secrets.DOCKER_USER }}/prod-cicd-app:${{ github.run_number }}

    - name: Deploy with Helm
      id: deploy
      continue-on-error: true
      run: |
        helm upgrade --install prod-cicd ./helm-chart \
          --set image.repository=${{ secrets.DOCKER_USER }}/prod-cicd-app \
          --set image.tag=${{ github.run_number }}

    - name: Rollback if Failed
      if: steps.deploy.outcome == 'failure'
      run: |
        echo "Deployment failed ❌ → Rolling back..."
        helm rollback prod-cicd 0 || true
        curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"❌ GitHub Actions: Deployment FAILED for prod-cicd-app:${{ github.run_number }}. Rolled back to last stable release."}' \
          ${{ secrets.SLACK_WEBHOOK }}

    - name: Slack Success Notification
      if: steps.deploy.outcome == 'success'
      run: |
        curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"✅ GitHub Actions: Deployment successful for prod-cicd-app:${{ github.run_number }}"}' \
          ${{ secrets.SLACK_WEBHOOK }}
